---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    deployment.kubernetes.io/revision: "7"
  creationTimestamp: null
  generation: 1
  labels:
    run: goapp17
  name: goapp17
  selfLink: /apis/apps/v1/namespaces/default/deployments/goapp17
spec:
  progressDeadlineSeconds: 600
  replicas: 5
  revisionHistoryLimit: 2
  selector:
    matchLabels:
      run: goapp17
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  template:
    metadata:
      annotations:
        kubectl.kubernetes.io/restartedAt: "2020-01-03T11:14:39+01:00"
      creationTimestamp: null
      labels:
        run: goapp17
    spec:
      containers:
        - image: <awsaccount>.dkr.ecr.eu-west-1.amazonaws.com/go-doc:0.0.2
          imagePullPolicy: IfNotPresent
          name: goapp17
          livenessProbe:
            httpGet:
              path: /healthy
              port: 8080
            initialDelaySeconds: 5
            timeoutSeconds: 1
            periodSeconds: 6
            failureThreshold: 3
          readinessProbe:
            httpGet:
              path: /ready
              port: 8080
            periodSeconds: 2
            initialDelaySeconds: 0
            failureThreshold: 3
            successThreshold: 3
          ports:
            - containerPort: 8080
              protocol: TCP
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      terminationGracePeriodSeconds: 30
status: {}
